<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.baoshuo.ren</id>
    <title>宝硕博客 • Posts by &#34;随笔&#34; category</title>
    <link href="https://blog.baoshuo.ren" />
    <updated>2020-11-28T13:39:32.000Z</updated>
    <category term="DN42" />
    <category term="网络" />
    <category term="题解" />
    <category term="洛谷" />
    <category term="Web" />
    <category term="CTF" />
    <category term="BIRD" />
    <category term="BGP" />
    <category term="Git" />
    <category term="折腾" />
    <category term="Linux" />
    <category term="笔记" />
    <category term="游记" />
    <category term="S2OJ" />
    <category term="macOS" />
    <category term="前端" />
    <category term="CloudFlare" />
    <category term="牛客网" />
    <entry>
        <id>https://blog.baoshuo.ren/post/download-smms-image/</id>
        <title>【随笔】下载自己在 SM.MS 图床上的所有图片</title>
        <link rel="alternate" href="https://blog.baoshuo.ren/post/download-smms-image/"/>
        <content type="html"><![CDATA[ <p>前提条件：有 <a href="http://SM.MS">SM.MS</a> 图床账号，并且图片存储在该账号下。</p>
<p>思路：先请求API，获取图片列表。遍历列表，判断本地是否存在该图片，若不存在则下载该图片。</p>
<p>代码如下。</p>
<pre><code class="highlight python"><span class="keyword">import</span> requests
<span class="keyword">import</span> os
<span class="keyword">import</span> json
<span class="keyword">import</span> pathlib
<span class="keyword">import</span> sys

<span class="function"><span class="keyword">def</span> <span class="title">getUploadedImages</span>(<span class="params">token</span>) -&gt; str:</span>
    url = <span class="string">&quot;https://sm.ms/api/v2/upload_history&quot;</span>
    headers = &#123;<span class="string">&quot;Authorization&quot;</span>: token&#125;
    <span class="keyword">return</span> requests.get(url, headers=headers).text

data = json.loads(getUploadedImages(sys.argv[<span class="number">1</span>]))

<span class="keyword">for</span> img <span class="keyword">in</span> data[<span class="string">&quot;data&quot;</span>]:
    path = <span class="string">&quot;./data/&quot;</span> + img[<span class="string">&quot;storename&quot;</span>]
    <span class="keyword">if</span> <span class="keyword">not</span> pathlib.Path(path).is_file():
        pic = requests.get(img[<span class="string">&quot;url&quot;</span>]).content
        f = <span class="built_in">open</span>(path, <span class="string">&quot;wb&quot;</span>)
        f.write(pic)
        f.close()
        <span class="keyword">del</span> pic
        print(<span class="string">&quot;Successfully get &quot;</span>+img[<span class="string">&quot;storename&quot;</span>]+<span class="string">&quot; .&quot;</span>)
    <span class="keyword">else</span>:
        print(<span class="string">&quot;&quot;</span>+img[<span class="string">&quot;storename&quot;</span>]+<span class="string">&quot; is already exists.&quot;</span>)</code></pre>
<p>使用方法：<code>python3 smms-image.py &quot;[your token here]&quot;</code></p>
<p>下载下来的图片会存到 <code>./data/</code> 目录下（请提前新建）。</p>
 ]]></content>
        <summary><![CDATA[  ]]></summary>
        <updated>2020-11-28T13:39:32.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.baoshuo.ren/post/change-git-submission-email/</id>
        <title>【随笔】批量修改 Git 仓库的提交邮箱</title>
        <link rel="alternate" href="https://blog.baoshuo.ren/post/change-git-submission-email/"/>
        <content type="html"><![CDATA[ <p>这几天重装了系统，一个不小心提交了好多 author 为 <code>&quot;root&quot;&lt;root@localhost&gt;</code> 的 commit ，于是寻找到了一个修改的方法。</p>
<p>在仓库根目录下新建一个名为 <code>fix.sh</code> 的 shell 脚本，输入以下内容：</p>
<pre><code class="highlight bash"><span class="meta">#!/bin/bash</span>
 
git filter-branch --env-filter <span class="string">&#x27;</span>
<span class="string">an=&quot;$GIT_AUTHOR_NAME&quot;</span>
<span class="string">am=&quot;$GIT_AUTHOR_EMAIL&quot;</span>
<span class="string">cn=&quot;$GIT_COMMITTER_NAME&quot;</span>
<span class="string">cm=&quot;$GIT_COMMITTER_EMAIL&quot;</span>
<span class="string"> </span>
<span class="string">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;错误邮箱&quot; ]</span>
<span class="string">then</span>
<span class="string">    cn=&quot;正确名称&quot;</span>
<span class="string">    cm=&quot;正确邮箱&quot;</span>
<span class="string">fi</span>
<span class="string">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;错误邮箱&quot; ]</span>
<span class="string">then</span>
<span class="string">    an=&quot;正确名称&quot;</span>
<span class="string">    am=&quot;正确邮箱&quot;</span>
<span class="string">fi</span>
<span class="string"></span>
<span class="string">export GIT_AUTHOR_NAME=&quot;$an&quot;</span>
<span class="string">export GIT_AUTHOR_EMAIL=&quot;$am&quot;</span>
<span class="string">export GIT_COMMITTER_NAME=&quot;$cn&quot;</span>
<span class="string">export GIT_COMMITTER_EMAIL=&quot;$cm&quot;</span>
<span class="string">&#x27;</span></code></pre>
<p>完成后运行 <code>./fix.sh</code> 即可。</p>
<p>PS: 跑完记得删脚本，或者直接把脚本内容改好之后拖进终端</p>
 ]]></content>
        <summary><![CDATA[  ]]></summary>
        <category term="Git" />
        <updated>2020-11-25T12:03:03.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.baoshuo.ren/post/tencent-cloud-cvm-dual-ip/</id>
        <title>给腾讯云服务器免费增加第二个 IP</title>
        <link rel="alternate" href="https://blog.baoshuo.ren/post/tencent-cloud-cvm-dual-ip/"/>
        <content type="html"><![CDATA[ <h2 id="前言">前言</h2>
<p>良心云果然是良心云，增加了一个IP四舍五入居然不要钱，不过还是要登进系统配置一下双IP的。</p>
<a id="more"></a>
<p><img src="https://vip2.loli.io/2020/11/26/rAyvBmDw2bdMP6t.jpg" alt="" loading="lazy" data-action="zoom"></p>
<p>和客服的对话</p>
<h2 id="增加网卡-公网IP">增加网卡&amp;公网IP</h2>
<p><img src="https://vip2.loli.io/2020/11/26/SWwlbLRaHACnuBz.png" alt="" loading="lazy" data-action="zoom"></p>
<p>点击按钮新建一个弹性网卡并绑定</p>
<p><img src="https://vip1.loli.io/2020/11/26/sJqBfdbv4eRzZFm.png" alt="" loading="lazy" data-action="zoom"></p>
<p>绑定完以后可以在服务器的弹性网卡管理页面看到详情</p>
<p><img src="https://vip1.loli.io/2020/11/26/ivPFgfH69XTCo8Z.png" alt="" loading="lazy" data-action="zoom"></p>
<p>点击新建的弹性网卡，进入管理页面，并记录下这张网卡的<strong>内网IP</strong>，稍后会用到</p>
<p><img src="https://vip1.loli.io/2020/11/26/FAy8U5lpzNtuMTi.png" alt="" loading="lazy" data-action="zoom"></p>
<p>点击绑定按钮，并申请一个弹性公网IP</p>
<p><img src="https://vip2.loli.io/2020/11/26/AbZ4vTwr1UCdz2n.png" alt="" loading="lazy" data-action="zoom">
<img src="https://vip2.loli.io/2020/11/26/2G5jsdTSZrocqwh.png" alt="" loading="lazy" data-action="zoom"></p>
<p>此时弹性公网IP已经绑定成功，并且可以看到已经变为不收取IP资源费的状态了</p>
<p><img src="https://vip1.loli.io/2020/11/26/x8q7I5E2dMSDt4B.png" alt="" loading="lazy" data-action="zoom"></p>
<p>查看主网卡的<strong>内网IP</strong>，并记录下这个IP，稍后会用到</p>
<h2 id="配置服务器的网络设置">配置服务器的网络设置</h2>
<p>使用 <code>ip addr</code> 查看网卡名称，并记录下来</p>
<p><img src="https://vip2.loli.io/2020/11/26/Ofh8CzvnYKPGsH7.png" alt="" loading="lazy" data-action="zoom"></p>
<p>切换到网卡配置文件目录</p>
<pre><code class="highlight bash"><span class="built_in">cd</span> /etc/sysconfig/network-scripts/</code></pre>
<p>编辑 <code>ifcfg-eth0</code> 文件，将下方内容修改后填入</p>
<pre><code class="highlight ini"><span class="attr">DEVICE</span>=<span class="string">&quot;eth0&quot;</span>             <span class="comment"># 弹性网卡名称</span>
<span class="attr">NM_CONTROLLED</span>=<span class="string">&quot;yes&quot;</span>       <span class="comment"># 是否由 Network Manager 控制该网络接口</span>
<span class="attr">ONBOOT</span>=<span class="string">&quot;yes&quot;</span>              <span class="comment"># 系统启动时是否激活</span>
<span class="attr">IPADDR</span>=<span class="string">&quot;172.21.0.10&quot;</span>      <span class="comment"># 弹性网卡上的 IP 地址</span>
<span class="attr">NETMASK</span>=<span class="string">&quot;255.255.240.0&quot;</span>   <span class="comment"># 子网掩码</span>
<span class="attr">GATEWAY</span>=<span class="string">&quot;172.21.0.1&quot;</span>      <span class="comment"># 网关</span></code></pre>
<ul>
<li>其中 <code>IPADDR</code> 填写主网卡的<strong>内网IP</strong>。</li>
<li>子网掩码可以使用 <a href="https://www.v2ex.com/tools/ipv4">V2EX 提供的 IPv4 子网查询工具</a> 查询对应的子网。</li>
<li>网关根据创建网卡时选择的子网而定。</li>
</ul>
<p>新建 <code>ifcfg-eth1</code> 文件，将下方内容修改后填入</p>
<pre><code class="highlight ini"><span class="attr">DEVICE</span>=<span class="string">&quot;eth1&quot;</span>             <span class="comment"># 需配置的弹性网卡名称（此处是新添加的网卡名称）</span>
<span class="attr">NM_CONTROLLED</span>=<span class="string">&quot;yes&quot;</span>       <span class="comment"># 是否由 Network Manager 控制该网络接口</span>
<span class="attr">ONBOOT</span>=<span class="string">&quot;yes&quot;</span>              <span class="comment"># 系统启动时是否激活</span>
<span class="attr">IPADDR</span>=<span class="string">&quot;172.21.0.12&quot;</span>      <span class="comment"># 弹性网卡上的 IP 地址</span>
<span class="attr">NETMASK</span>=<span class="string">&quot;255.255.240.0&quot;</span>   <span class="comment"># 子网掩码</span>
<span class="comment"># GATEWAY=&quot;172.21.0.1&quot;    # 网关（若与eth0的网关不同，需要删除注释并修改为正确的网关）</span></code></pre>
<ul>
<li>其中 <code>IPADDR</code> 填写新添加网卡的<strong>内网IP</strong>。</li>
<li>子网掩码可以 <a href="https://www.v2ex.com/tools/ipv4">V2EX 提供的 IPv4 子网查询工具</a> 查询对应的子网。</li>
<li>网关根据创建网卡时选择的子网而定。</li>
</ul>
<p>保存后重启网络服务。</p>
<pre><code class="highlight bash">service network restart</code></pre>
<p><img src="https://vip1.loli.io/2020/11/26/ReBSM4C9oF2HbVi.png" alt="" loading="lazy" data-action="zoom"></p>
<h2 id="配置路由（可选）">配置路由（可选）</h2>
<blockquote>
<p>按照上述步骤配置好后，Linux 还是默认都从主网卡发包。
您可通过策略路由让报文从哪个网卡进，并从该网卡返回。</p>
</blockquote>
<h3 id="创建路由表">创建路由表</h3>
<pre><code class="highlight bash"><span class="built_in">echo</span> <span class="string">&quot;10 t1&quot;</span> &gt;&gt; /etc/iproute2/rt_tables
<span class="built_in">echo</span> <span class="string">&quot;20 t2&quot;</span> &gt;&gt; /etc/iproute2/rt_tables</code></pre>
<h3 id="添加默认路由">添加默认路由</h3>
<pre><code class="highlight bash">ip route add default dev eth0 via 172.21.0.1 table 10
ip route add default dev eth1 via 172.21.0.1 table 20</code></pre>
<blockquote>
<p>上述两个命令中，172.21.0.1要分别替换成主网卡所属子网的网关，以及辅助网卡所属子网的网关。</p>
</blockquote>
<h3 id="配置策略路由">配置策略路由</h3>
<pre><code class="highlight bash">ip rule add from 172.21.0.10 table 10
ip rule add from 172.21.0.12 table 20</code></pre> ]]></content>
        <summary><![CDATA[ 前言
良心云果然是良心云，增加了一个IP四舍五入居然不要钱，不过还是要登进系统配置一下双IP的。 ]]></summary>
        <category term="网络" />
        <category term="Linux" />
        <updated>2020-08-20T05:22:47.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.baoshuo.ren/post/clone-github-repo-faster/</id>
        <title>【随笔】修改 Git 配置加速 clone GitHub 源码</title>
        <link rel="alternate" href="https://blog.baoshuo.ren/post/clone-github-repo-faster/"/>
        <content type="html"><![CDATA[ <p>设置代理：</p>
<pre><code class="highlight bash"><span class="comment"># socks5协议，1080端口修改成自己的本地代理端口</span>
git config --global http.https://github.com.proxy  socks5://127.0.0.1:1080
git config --global https.https://github.com.proxy socks5://127.0.0.1:1080

<span class="comment"># http协议，7890端口修改成自己的本地代理端口</span>
git config --global http.https://github.com.proxy  http://127.0.0.1:7890
git config --global https.https://github.com.proxy http://127.0.0.1:7890</code></pre>
<p>之后运行 <code>git config -l</code> 即可查看代理设置情况。</p>
<p>清除代理：</p>
<pre><code class="highlight shell">git config --global --unset http.proxy
git config --global --unset https.proxy</code></pre> ]]></content>
        <summary><![CDATA[  ]]></summary>
        <category term="Git" />
        <updated>2020-07-21T10:38:23.000Z</updated>
    </entry>
</feed>