{
    "version": "https://jsonfeed.org/version/1",
    "title": "宝硕博客 • All posts by \"折腾\" tag",
    "description": "宝硕博客 —— Baoshuo (@renbaoshuo) 随便写东西的地方，以技术向博文为主，生活向博文为辅。",
    "home_page_url": "https://blog.baoshuo.ren",
    "items": [
        {
            "id": "https://blog.baoshuo.ren/post/hello-2021/",
            "url": "https://blog.baoshuo.ren/post/hello-2021/",
            "title": "你好，2021 | 博客迁移记录",
            "date_published": "2020-12-31T16:00:00.000Z",
            "content_html": "<p>再见，2020。</p>\n<span id=\"more\"></span>\n<p>最近总是觉得博客太慢了，于是乎，我把博客迁移到自己的服务器上面了。</p>\n<h2 id=\"服务器端操作\"><a class=\"anchor\" href=\"#服务器端操作\"></a>服务器端操作</h2>\n<h3 id=\"安装-nginx\"><a class=\"anchor\" href=\"#安装-nginx\"></a>安装 nginx</h3>\n<p>apt 一把梭，省时又省力。</p>\n<pre><code class=\"highlight shell\">apt install nginx -y</code></pre>\n<h3 id=\"配置-nginx\"><a class=\"anchor\" href=\"#配置-nginx\"></a>配置 nginx</h3>\n<p>简简单单配置了一下，没有什么过于复杂的东西。</p>\n<p>在申请 SSL 证书之前，不要写 HTTPS 的配置。</p>\n<pre><code class=\"highlight nginx\"><span class=\"section\">server</span> &#123;\n    <span class=\"attribute\">listen</span>      <span class=\"number\">80</span>;\n    <span class=\"attribute\">listen</span>      [::]:<span class=\"number\">80</span>;\n    <span class=\"attribute\">server_name</span> blog.baoshuo.ren;\n\n    <span class=\"comment\"># ACME-challenge</span>\n    <span class=\"attribute\">location</span><span class=\"regexp\"> ^~</span> /.well-known/acme-challenge/ &#123;\n        <span class=\"attribute\">allow</span> all;\n        <span class=\"attribute\">root</span> /var/www/_letsencrypt;\n    &#125;\n\n    <span class=\"attribute\">location</span> / &#123;\n        <span class=\"attribute\">return</span> <span class=\"number\">301</span> https://blog.baoshuo.ren$request_uri;\n    &#125;\n&#125;</code></pre>\n<h3 id=\"申请-ssl-证书\"><a class=\"anchor\" href=\"#申请-ssl-证书\"></a>申请 SSL 证书</h3>\n<p>由于笔者懒得每年换证书，所以就用了 <a href=\"https://letsencrypt.org/\">Let’s Encrypt</a> + <a href=\"https://acme.sh\">acme.sh</a> 的组合套装来配置 SSL 。\n当然，ECC 证书也是少不了的。</p>\n<pre><code class=\"highlight bash\">acme.sh --issue -d baoshuo.ren -d www.baoshuo.ren -d blog.baoshuo.ren \\\n    -w /var/www/_letsencrypt/ \\\n    --renew-hook <span class=\"string\">&quot;acme.sh --install-cert -d baoshuo.ren \\</span>\n<span class=\"string\">    --key-file /***/baoshuo.ren.key \\</span>\n<span class=\"string\">    --fullchain-file /***/baoshuo.ren.cer \\</span>\n<span class=\"string\">    --reloadcmd \\&quot;service nginx force-reload\\&quot;&quot;</span>\nacme.sh --issue --keylength ec-256 \\\n    -d baoshuo.ren -d www.baoshuo.ren -d blog.baoshuo.ren \\\n    -w /var/www/_letsencrypt/ \\\n    --renew-hook <span class=\"string\">&quot;acme.sh --install-cert -d baoshuo.ren --ecc \\</span>\n<span class=\"string\">    --key-file /***/baoshuo.ren.ecc.key \\</span>\n<span class=\"string\">    --fullchain-file /***/baoshuo.ren.ecc.cer \\</span>\n<span class=\"string\">    --reloadcmd \\&quot;service nginx force-reload\\&quot;&quot;</span></code></pre>\n<p>申请完成后，将 RSA 和 ECC 证书添加到 nginx 配置中，在配置文件中写入以下内容：</p>\n<pre><code class=\"highlight nginx\"><span class=\"section\">server</span> &#123;\n    <span class=\"attribute\">listen</span>                               <span class=\"number\">443</span> ssl http2;\n    <span class=\"attribute\">listen</span>                               [::]:<span class=\"number\">443</span> ssl http2;\n    <span class=\"attribute\">server_name</span>                          blog.baoshuo.ren;\n    <span class=\"attribute\">root</span>                                 /var/www/blog/;\n\n    <span class=\"comment\"># SSL</span>\n    <span class=\"attribute\">ssl_certificate</span>                      /***/baoshuo.ren.cer;\n    <span class=\"attribute\">ssl_certificate_key</span>                  /***/baoshuo.ren.key;\n    <span class=\"attribute\">ssl_certificate</span>                      /***/baoshuo.ren.ecc.cer;\n    <span class=\"attribute\">ssl_certificate_key</span>                  /***/baoshuo.ren.ecc.key;\n    <span class=\"attribute\">ssl_protocols</span>                        TLSv1.<span class=\"number\">2</span> TLSv1.<span class=\"number\">3</span>;\n    <span class=\"attribute\">ssl_ciphers</span>                          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\n    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">off</span>;\n\n    <span class=\"comment\"># HSTS</span>\n    <span class=\"attribute\">add_header</span> Strict-Transport-Security <span class=\"string\">&#x27;max-age=31536000&#x27;</span>;\n\n    <span class=\"comment\"># logging</span>\n    <span class=\"attribute\">error_log</span>                            /var/log/nginx/blog.baoshuo.ren.<span class=\"literal\">error</span>.log <span class=\"literal\">warn</span>;\n\n    <span class=\"comment\"># 404 page</span>\n    <span class=\"attribute\">error_page</span>                           <span class=\"number\">404</span> /<span class=\"number\">404</span>.html;\n&#125;</code></pre>\n<p>上方使用的 SSL 配置是 Mozilla 推荐的现代化配置<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup> ，如果需要更好的兼容性，可以使用 Mozilla 提供的中等安全性配置<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup> ：</p>\n<pre><code class=\"highlight apache\"><span class=\"attribute\">ssl_protocols</span> TLSv<span class=\"number\">1</span> TLSv<span class=\"number\">1</span>.<span class=\"number\">1</span> TLSv<span class=\"number\">1</span>.<span class=\"number\">2</span> TLSv<span class=\"number\">1</span>.<span class=\"number\">3</span>;\n<span class=\"attribute\">ssl_ciphers</span> ECDHE-ECDSA-AES<span class=\"number\">128</span>-GCM-SHA<span class=\"number\">256</span>:ECDHE-RSA-AES<span class=\"number\">128</span>-GCM-SHA<span class=\"number\">256</span>:ECDHE-ECDSA-AES<span class=\"number\">256</span>-GCM-SHA<span class=\"number\">384</span>:ECDHE-RSA-AES<span class=\"number\">256</span>-GCM-SHA<span class=\"number\">384</span>:ECDHE-ECDSA-CHACHA<span class=\"number\">20</span>-POLY<span class=\"number\">1305</span>:ECDHE-RSA-CHACHA<span class=\"number\">20</span>-POLY<span class=\"number\">1305</span>:DHE-RSA-AES<span class=\"number\">128</span>-GCM-SHA<span class=\"number\">256</span>:DHE-RSA-AES<span class=\"number\">256</span>-GCM-SHA<span class=\"number\">384</span>:DHE-RSA-CHACHA<span class=\"number\">20</span>-POLY<span class=\"number\">1305</span>:ECDHE-ECDSA-AES<span class=\"number\">128</span>-SHA<span class=\"number\">256</span>:ECDHE-RSA-AES<span class=\"number\">128</span>-SHA<span class=\"number\">256</span>:ECDHE-ECDSA-AES<span class=\"number\">128</span>-SHA:ECDHE-RSA-AES<span class=\"number\">128</span>-SHA:ECDHE-ECDSA-AES<span class=\"number\">256</span>-SHA<span class=\"number\">384</span>:ECDHE-RSA-AES<span class=\"number\">256</span>-SHA<span class=\"number\">384</span>:ECDHE-ECDSA-AES<span class=\"number\">256</span>-SHA:ECDHE-RSA-AES<span class=\"number\">256</span>-SHA:DHE-RSA-AES<span class=\"number\">128</span>-SHA<span class=\"number\">256</span>:DHE-RSA-AES<span class=\"number\">256</span>-SHA<span class=\"number\">256</span>:AES<span class=\"number\">128</span>-GCM-SHA<span class=\"number\">256</span>:AES<span class=\"number\">256</span>-GCM-SHA<span class=\"number\">384</span>:AES<span class=\"number\">128</span>-SHA<span class=\"number\">256</span>:AES<span class=\"number\">256</span>-SHA<span class=\"number\">256</span>:AES<span class=\"number\">128</span>-SHA:AES<span class=\"number\">256</span>-SHA:DES-CBC<span class=\"number\">3</span>-SHA;\n<span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</code></pre>\n<h2 id=\"将博客文件同步到服务器上\"><a class=\"anchor\" href=\"#将博客文件同步到服务器上\"></a>将博客文件同步到服务器上</h2>\n<p>在 <code>.github/workflows</code> 目录下创建一个 <code>server.yml</code> 文件，写入以下内容：</p>\n<pre><code class=\"highlight yaml\"><span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">blog</span> <span class=\"string\">to</span> <span class=\"string\">Server</span>\n\n<span class=\"attr\">on:</span>\n  <span class=\"attr\">push:</span>\n    <span class=\"attr\">branches:</span> [ <span class=\"string\">master</span> ]\n  <span class=\"attr\">workflow_dispatch:</span>\n\n<span class=\"attr\">jobs:</span>\n  <span class=\"attr\">deploy:</span>\n    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span>\n    <span class=\"attr\">steps:</span>\n      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span>\n        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span>\n      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span>\n        <span class=\"attr\">uses:</span> <span class=\"string\">easingthemes/ssh-deploy@v2.1.5</span>\n        <span class=\"attr\">env:</span>\n          <span class=\"attr\">SSH_PRIVATE_KEY:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.SSH_PRIVATE_KEY</span> <span class=\"string\">&#125;&#125;</span>\n          <span class=\"attr\">ARGS:</span> <span class=\"string\">&quot;-avz --delete  --exclude &#x27;.git/*&#x27; --exclude &#x27;.github/*&#x27; --exclude &#x27;.gitlab-ci.yml&#x27; --exclude &#x27;.nojekyll&#x27;&quot;</span>\n          <span class=\"attr\">REMOTE_HOST:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.REMOTE_HOST</span> <span class=\"string\">&#125;&#125;</span>\n          <span class=\"attr\">REMOTE_USER:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.REMOTE_USER</span> <span class=\"string\">&#125;&#125;</span>\n          <span class=\"attr\">TARGET:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.TARGET</span> <span class=\"string\">&#125;&#125;</span></code></pre>\n<p>之后在 <code>https://github.com/&#123;username&#125;/&#123;repo&#125;/settings/secrets/actions</code> 中添加四个 Secrets 。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>REMOTE_HOST</td>\n<td>服务器 IP 地址</td>\n</tr>\n<tr>\n<td>REMOTE_USER</td>\n<td>服务器用户名</td>\n</tr>\n<tr>\n<td>SSH_PRIVATE_KEY</td>\n<td>连接到服务器的 SSH 私钥</td>\n</tr>\n<tr>\n<td>TARGET</td>\n<td>存放文件的路径</td>\n</tr>\n</tbody>\n</table>\n<p>将博客文件 push 到仓库中，就能在服务器上查看到文件了。</p>\n<h2 id=\"参考资料\"><a class=\"anchor\" href=\"#参考资料\"></a>参考资料</h2>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://ssl-config.mozilla.org/#server=nginx&amp;version=1.18.0&amp;config=modern&amp;openssl=1.1.1f&amp;ocsp=false&amp;guideline=5.6\">nginx 1.18.0, modern config, OpenSSL 1.1.1f - Mozilla SSL Configuration Generator</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><a href=\"https://ssl-config.mozilla.org/#server=nginx&amp;version=1.18.0&amp;config=intermediate&amp;openssl=1.1.1f&amp;ocsp=false&amp;guideline=5.6\">nginx 1.18.0, intermediate config, OpenSSL 1.1.1f - Mozilla SSL Configuration Generator</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "折腾"
            ]
        },
        {
            "id": "https://blog.baoshuo.ren/post/raspberry-pi-rtmp-live/",
            "url": "https://blog.baoshuo.ren/post/raspberry-pi-rtmp-live/",
            "title": "使用树莓派+nginx搭建 rtmp 直播服务",
            "date_published": "2020-10-05T13:35:32.000Z",
            "content_html": "<p>国庆在家闲着没啥事，把一直在角落里吃灰的树莓派 4B 拿出来捣鼓了几下。</p>\n<span id=\"more\"></span>\n<p>使用 nginx 模块：<a href=\"https://github.com/arut/nginx-rtmp-module\"><code>nginx-rtmp-module</code></a></p>\n<h2 id=\"安装-nginx-nginx-rtmp-module\"><a class=\"anchor\" href=\"#安装-nginx-nginx-rtmp-module\"></a>安装 nginx &amp; nginx-rtmp-module</h2>\n<p>apt, yes!</p>\n<pre><code class=\"highlight bash\">apt update\napt upgrade -y\napt install nginx libnginx-mod-rtmp -y</code></pre>\n<p>访问服务器 IP ，出现如下图所示网页即代表安装成功。</p>\n<p><img src=\"https://vip1.loli.io/2020/11/26/BdKOhDuxIaYks6q.png\" alt=\"\" loading=\"lazy\" data-action=\"zoom\"></p>\n<h2 id=\"修改-nginx-配置\"><a class=\"anchor\" href=\"#修改-nginx-配置\"></a>修改 nginx 配置</h2>\n<p>打开 <code>/etc/nginx/nginx.conf</code> ，在末尾处插入下面的配置</p>\n<pre><code class=\"highlight nginx\"><span class=\"section\">rtmp</span> &#123;\n    <span class=\"section\">server</span> &#123;\n        <span class=\"attribute\">listen</span>     <span class=\"number\">1935</span>;              <span class=\"comment\"># 服务端口</span>\n        <span class=\"attribute\">chunk_size</span> <span class=\"number\">4096</span>;              <span class=\"comment\"># 数据传输块的大小</span>\n\n        <span class=\"attribute\">application</span> vod &#123;\n            <span class=\"attribute\">play</span> /opt/video;          <span class=\"comment\"># 视频文件存放位置。</span>\n        &#125;\n\n        <span class=\"attribute\">application</span> rtmplive &#123;\n            <span class=\"attribute\">live</span>            <span class=\"literal\">on</span>;        <span class=\"comment\"># 开启直播</span>\n            <span class=\"attribute\">max_connections</span> <span class=\"number\">64</span>;        <span class=\"comment\"># 为 rtmp 引擎设置最大连接数。默认为 off</span>\n        &#125;\n\n        <span class=\"attribute\">application</span> live &#123;\n            <span class=\"attribute\">live</span>                <span class=\"literal\">on</span>;              <span class=\"comment\"># 开启直播</span>\n            <span class=\"attribute\">hls</span>                 <span class=\"literal\">on</span>;              <span class=\"comment\"># 这个参数把直播服务器改造成实时回放服务器。</span>\n            <span class=\"attribute\">wait_key</span>            <span class=\"literal\">on</span>;              <span class=\"comment\"># 对视频切片进行保护，这样就不会产生马赛克了。</span>\n            <span class=\"attribute\">hls_path</span>            /opt/video/hls;  <span class=\"comment\"># 切片视频文件存放位置。</span>\n            <span class=\"attribute\">hls_fragment</span>        <span class=\"number\">10s</span>;             <span class=\"comment\"># 设置HLS片段长度。</span>\n            <span class=\"attribute\">hls_max_fragment</span>    <span class=\"number\">10s</span>;             <span class=\"comment\"># 设置HLS片段最大长度。</span>\n            <span class=\"attribute\">hls_playlist_length</span> <span class=\"number\">30s</span>;             <span class=\"comment\"># 设置HLS播放列表长度。</span>\n            <span class=\"attribute\">hls_continuous</span>      <span class=\"literal\">on</span>;              <span class=\"comment\"># 连续模式。</span>\n            <span class=\"attribute\">hls_cleanup</span>         <span class=\"literal\">on</span>;              <span class=\"comment\"># 对多余的切片进行删除。</span>\n            <span class=\"attribute\">hls_nested</span>          <span class=\"literal\">on</span>;              <span class=\"comment\"># 嵌套模式。</span>\n        &#125;\n    &#125;\n&#125;</code></pre>\n<p>打开默认站点配置文件 <code>/etc/nginx/sites-available/default</code> ，在 <code>server</code> 部分的末尾添加以下内容</p>\n<pre><code class=\"highlight nginx\"><span class=\"attribute\">location</span> /live &#123;\n    <span class=\"section\">types</span> &#123;\n        application/vnd.apple.<span class=\"attribute\">mpegurl</span> m3u8;\n        video/<span class=\"attribute\">mp2t</span>                    ts;\n    &#125;\n\n    <span class=\"attribute\">autoindex</span> <span class=\"literal\">on</span>;\n    <span class=\"attribute\">alias</span>     /opt/video/hls;\n\n    <span class=\"attribute\">expires</span> -<span class=\"number\">1</span>;\n\n    <span class=\"attribute\">add_header</span> <span class=\"string\">&#x27;Cache-Control&#x27;</span>                    <span class=\"string\">&#x27;no-cache&#x27;</span>;\n    <span class=\"attribute\">add_header</span> <span class=\"string\">&#x27;Access-Control-Allow-Origin&#x27;</span>      <span class=\"string\">&#x27;*&#x27;</span>;\n    <span class=\"attribute\">add_header</span> <span class=\"string\">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class=\"string\">&#x27;true&#x27;</span>;\n    <span class=\"attribute\">add_header</span> <span class=\"string\">&#x27;Access-Control-Allow-Methods&#x27;</span>     <span class=\"string\">&#x27;GET, POST, OPTIONS&#x27;</span>;\n    <span class=\"attribute\">add_header</span> <span class=\"string\">&#x27;Access-Control-Allow-Headers&#x27;</span>     <span class=\"string\">&#x27;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;</span>;\n&#125;\n<span class=\"attribute\">location</span> /stat &#123;\n    <span class=\"attribute\">rtmp_stat</span> all;\n    <span class=\"comment\"># rtmp_stat_stylesheet stat.xsl;</span>\n&#125;</code></pre>\n<p>插入完以后配置文件会变成下面的样子</p>\n<pre><code class=\"highlight diff\"><span class=\"comment\">--- /etc/nginx/sites-available/default</span>\n<span class=\"comment\">+++ /etc/nginx/sites-available/default</span>\n<span class=\"meta\">@@ -1,14 +1,36 @@</span>\n server &#123;\n     listen 80 default_server;\n     listen [::]:80 default_server;\n\n     root /var/www/html;\n\n     index index.html index.htm index.nginx-debian.html;\n\n     server_name _;\n\n     location / &#123;\n         try_files $uri $uri/ =404;\n     &#125;\n<span class=\"addition\">+</span>\n<span class=\"addition\">+    location /live &#123;</span>\n<span class=\"addition\">+        types &#123;</span>\n<span class=\"addition\">+            application/vnd.apple.mpegurl m3u8;</span>\n<span class=\"addition\">+            video/mp2t                    ts;</span>\n<span class=\"addition\">+        &#125;</span>\n<span class=\"addition\">+</span>\n<span class=\"addition\">+        autoindex on;</span>\n<span class=\"addition\">+        alias     /opt/video/hls;</span>\n<span class=\"addition\">+</span>\n<span class=\"addition\">+        expires -1;</span>\n<span class=\"addition\">+</span>\n<span class=\"addition\">+        add_header &#x27;Cache-Control&#x27;                    &#x27;no-cache&#x27;;</span>\n<span class=\"addition\">+        add_header &#x27;Access-Control-Allow-Origin&#x27;      &#x27;*&#x27;;</span>\n<span class=\"addition\">+        add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;;</span>\n<span class=\"addition\">+        add_header &#x27;Access-Control-Allow-Methods&#x27;     &#x27;GET, POST, OPTIONS&#x27;;</span>\n<span class=\"addition\">+        add_header &#x27;Access-Control-Allow-Headers&#x27;     &#x27;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;;</span>\n<span class=\"addition\">+    &#125;</span>\n<span class=\"addition\">+    location /stat &#123;</span>\n<span class=\"addition\">+        rtmp_stat all;</span>\n<span class=\"addition\">+        # rtmp_stat_stylesheet stat.xsl;</span>\n<span class=\"addition\">+    &#125;</span>\n &#125;</code></pre>\n<p>修改完成后使用 <code>nginx -t</code> 测试配置文件是否正确</p>\n<pre><code class=\"highlight vim\">nginx: the configuration <span class=\"keyword\">file</span> /etc/nginx/nginx.<span class=\"keyword\">conf</span> <span class=\"keyword\">syntax</span> <span class=\"keyword\">is</span> ok\nnginx: configuration <span class=\"keyword\">file</span> /etc/nginx/nginx.<span class=\"keyword\">conf</span> test <span class=\"keyword\">is</span> successful</code></pre>\n<p>当出现成功提示时，使用 <code>nginx -s reload</code> 平滑重启 nginx。</p>\n<p>重启成功后使用 <code>netstat -lnp</code> 查看 <code>tcp/1935</code> 端口是否开启。</p>\n<p><img src=\"https://vip1.loli.io/2020/11/26/Xy3Nq5WZaogLIvR.png\" alt=\"\" loading=\"lazy\" data-action=\"zoom\"></p>\n<h2 id=\"使用-obs-连接直播服务器\"><a class=\"anchor\" href=\"#使用-obs-连接直播服务器\"></a>使用 OBS 连接直播服务器</h2>\n<p>打开 OBS ，在 设置 -&gt; 推流 中配置以下内容</p>\n<table>\n<thead>\n<tr>\n<th>项目</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>服务</td>\n<td><code>自定义...</code></td>\n</tr>\n<tr>\n<td>服务器</td>\n<td><code>rtmp://$&#123;ip&#125;/live</code></td>\n</tr>\n<tr>\n<td>串流密钥</td>\n<td><code>$&#123;key&#125;</code></td>\n</tr>\n</tbody>\n</table>\n<p>其中，<code>$&#123;ip&#125;</code> 和 <code>$&#123;key&#125;</code> 设置为你需要的值即可。</p>\n<p>回到主界面，点击 <strong>开始推流</strong> 进行推流。</p>\n<h2 id=\"使用客户端拉取直播流\"><a class=\"anchor\" href=\"#使用客户端拉取直播流\"></a>使用客户端拉取直播流</h2>\n<p><img src=\"https://vip2.loli.io/2020/11/26/jpqVTAgXSW6oyEP.png\" alt=\"\" loading=\"lazy\" data-action=\"zoom\"></p>\n<p>在 <code>PotPlayer</code> <code>QQ影音</code> 等播放器中选择 <code>打开-&gt;打开URL</code> 。</p>\n<p><img src=\"https://vip1.loli.io/2020/11/26/rzBNukVTntf5xUR.png\" alt=\"\" loading=\"lazy\" data-action=\"zoom\"></p>\n<p>输入 <code>http://$&#123;ip&#125;/live/$&#123;key&#125;/index.m3u8</code> ，点击确定。</p>\n<p><img src=\"https://vip1.loli.io/2020/11/26/crbEBQNC3qH8uOl.jpg\" alt=\"\" loading=\"lazy\" data-action=\"zoom\"></p>\n<p>此时可以就看到直播画面了。</p>\n<h2 id=\"网页端播放\"><a class=\"anchor\" href=\"#网页端播放\"></a>网页端播放</h2>\n<p>页面中只有一个播放器，其他功能请自行实现。</p>\n<pre><code class=\"highlight xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span>\n\n<span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Live Player<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span>\n\n<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dplayer&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/hls.js@0.14.13/dist/hls.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/dplayer@1.26.0/dist/DPlayer.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span>\n<span class=\"javascript\">        <span class=\"keyword\">const</span> dp = <span class=\"keyword\">new</span> DPlayer(&#123;</span>\n<span class=\"javascript\">            <span class=\"attr\">container</span>: <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;dplayer&#x27;</span>),</span>\n<span class=\"javascript\">            <span class=\"attr\">live</span>: <span class=\"literal\">true</span>,</span>\n<span class=\"javascript\">            <span class=\"attr\">video</span>: &#123;</span>\n<span class=\"javascript\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;http://$&#123;ip&#125;/live/$&#123;key&#125;/index.m3u8&#x27;</span>,</span>\n<span class=\"javascript\">                <span class=\"attr\">type</span>: <span class=\"string\">&#x27;hls&#x27;</span>,</span>\n<span class=\"javascript\">            &#125;,</span>\n<span class=\"javascript\">        &#125;);</span>\n<span class=\"javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span>\n\n<span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></code></pre>\n<p><img src=\"https://vip1.loli.io/2020/11/26/9X6mUtF4fLzdaYn.jpg\" alt=\"\" loading=\"lazy\" data-action=\"zoom\"></p>\n<h2 id=\"后记\"><a class=\"anchor\" href=\"#后记\"></a>后记</h2>\n<p>如果没有在外直播的需求，不要将 rtmp 端口映射至公网，这可能会带来一些不必要的麻烦。</p>\n<h2 id=\"参考资料\"><a class=\"anchor\" href=\"#参考资料\"></a>参考资料</h2>\n",
            "tags": [
                "折腾"
            ]
        }
    ]
}