  
<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>宝硕博客 • Posts by &#34;笔记&#34; tag</title>
        <link>https://blog.baoshuo.ren</link>
        <description>宝硕博客 —— Baoshuo (@renbaoshuo) 随便写东西的地方，以技术向博文为主，生活向博文为辅。</description>
        <language>cn</language>
        <pubDate>Wed, 02 Dec 2020 08:08:39 +0800</pubDate>
        <lastBuildDate>Wed, 02 Dec 2020 08:08:39 +0800</lastBuildDate>
        <category>BIRD</category>
        <category>BGP</category>
        <category>DN42</category>
        <category>网络</category>
        <category>Web</category>
        <category>CTF</category>
        <category>Git</category>
        <category>折腾</category>
        <category>Linux</category>
        <category>题解</category>
        <category>洛谷</category>
        <category>笔记</category>
        <category>牛客网</category>
        <category>S2OJ</category>
        <category>游记</category>
        <category>macOS</category>
        <category>前端</category>
        <category>Cloudflare</category>
        <item>
            <guid isPermalink="true">https://blog.baoshuo.ren/post/segment-tree/</guid>
            <title>线段树学习笔记</title>
            <link>https://blog.baoshuo.ren/post/segment-tree/</link>
            <category>笔记</category>
            <pubDate>Wed, 02 Dec 2020 08:08:39 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;线段树（Segment Tree）是一种用来维护区间的数据结构。&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;
&lt;p&gt;与树状数组相比，线段树可以实现时间复杂度在 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;O(\log n)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 级别的区间修改，还可以同时支持多种操作（加、乘、最值等）。&lt;/p&gt;
&lt;h2 id=&#34;操作列表&#34;&gt;操作列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;上传（pushup）&lt;/li&gt;
&lt;li&gt;建树（build）&lt;/li&gt;
&lt;li&gt;下放懒标记（pushdown）&lt;/li&gt;
&lt;li&gt;区间查询（query）&lt;/li&gt;
&lt;li&gt;区间修改（modify）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;通用操作&#34;&gt;通用操作&lt;/h2&gt;
&lt;h3 id=&#34;存储线段树&#34;&gt;存储线段树&lt;/h3&gt;
&lt;p&gt;线段树是一个典型的二叉树，因此我们可以使用一个数组来存储线段树。&lt;/p&gt;
&lt;p&gt;分析：很容易就知道线段树的深度为 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;⌈&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;⌉&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\lceil\log n\rceil&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;⌈&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⌉&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ，可得线段树的节点个数为 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mrow&gt;&lt;mo fence=&#34;true&#34;&gt;⌈&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo fence=&#34;true&#34;&gt;⌉&lt;/mo&gt;&lt;/mrow&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;2^{\left\lceil\log{n}\right\rceil+1}-1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.9713299999999999em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8879999999999999em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;minner mtight&#34;&gt;&lt;span class=&#34;mopen mtight delimcenter&#34; style=&#34;top:0em;&#34;&gt;&lt;span class=&#34;mtight&#34;&gt;⌈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mop mtight&#34;&gt;&lt;span class=&#34;mtight&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mtight&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mtight&#34; style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace mtight&#34; style=&#34;margin-right:0.19516666666666668em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose mtight delimcenter&#34; style=&#34;top:0em;&#34;&gt;&lt;span class=&#34;mtight&#34;&gt;⌉&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，粗略估计开大小为 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;4n&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的数组即可（可以使用位运算写成 &lt;code&gt;n &amp;lt;&amp;lt; 2&lt;/code&gt;）。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;node&lt;/span&gt; &amp;#123;&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, r;
    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; s, d;

    node() &amp;#123;
        l = r = s = d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
    &amp;#125;
    node(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; _l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; _r) &amp;#123;
        l = _l;
        r = _r;
        s = d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
    &amp;#125;
&amp;#125; tr[&lt;span class=&#34;number&#34;&gt;100005&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量名&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;l&lt;/td&gt;
&lt;td&gt;区间的左端点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;区间的右端点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;区间和&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;懒标记&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;上传（pushup）&#34;&gt;上传（pushup）&lt;/h3&gt;
&lt;p&gt;之所以把上传放在建树前面说，是因为建树的时候要用到它。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 上传信息&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;pushup&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    tr[u].s = tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s + tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将两个子节点所代表的区间的和相加即为父区间的和。&lt;/p&gt;
&lt;h3 id=&#34;建树（build）&#34;&gt;建树（build）&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 建立线段树&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 根节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l 左端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r 右端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    tr[u] = node(l, r);
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l == r) &amp;#123;
        tr[u].s = a[l];
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = l + r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    build(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, mid);
    build(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, mid + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, r);
    pushup(u);
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;先初始化当前区间，接下来分两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若当前区间长度等于 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1\ \ (l = r)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mspace&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ，则直接将当前区间的区间和赋值为 &lt;code&gt;a[l]&lt;/code&gt; 即可。&lt;/li&gt;
&lt;li&gt;若当前区间长度大于 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1\ \ (l &amp;lt; r)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mspace&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ，则将区间平均分成两部分（即从 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;⌊&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;⌋&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\lfloor(l+r)/2\rfloor&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;⌊&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⌋&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 处断开分为两个区间，可写作 &lt;code&gt;l + r &amp;gt;&amp;gt; 1&lt;/code&gt;），继续向下递归建立左右子树即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要注意的是两个子区间没有交集，因此左子树的左端点是 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;l&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 、右端点是 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;mid&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ，右子树的左端点是 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;mid+1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.77777em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 、右端点是 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;r&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.43056em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;区间查询（query）&#34;&gt;区间查询（query）&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 区间查询&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l 左端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r 右端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tr[u].l &amp;gt;= l &amp;amp;&amp;amp; tr[u].r &amp;lt;= r) &amp;#123;  &lt;span class=&#34;comment&#34;&gt;// 被包含直接返回当前区间和&lt;/span&gt;
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; tr[u].s;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = tr[u].l + tr[u].r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; s = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
    pushdown(u);                                &lt;span class=&#34;comment&#34;&gt;// 下放懒标记&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l &amp;lt;= mid) s += query(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r);     &lt;span class=&#34;comment&#34;&gt;// 和左侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (r &amp;gt; mid) s += query(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r);  &lt;span class=&#34;comment&#34;&gt;// 和右侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;如果这个区间被包含，直接返回该区间的和。&lt;/li&gt;
&lt;li&gt;如果和左儿子区间有交集，则继续向左儿子区间递归查询。&lt;/li&gt;
&lt;li&gt;如果和右儿子区间有交集，则继续向右儿子区间递归查询。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要注意的是在递归查询左右儿子区间之前要先下放懒标记（pushdown），否则会出问题。&lt;/p&gt;
&lt;h2 id=&#34;区间加&#34;&gt;区间加&lt;/h2&gt;
&lt;p&gt;本部分以 &lt;a href=&#34;https://www.luogu.com.cn/problem/P3372&#34;&gt;洛谷 P3372 【模板】线段树 1&lt;/a&gt; 为例子来简述一下线段树区间加的实现。&lt;/p&gt;
&lt;h3 id=&#34;下放懒标记（pushdown）&#34;&gt;下放懒标记（pushdown）&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 下放懒标记&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;pushdown&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!tr[u].d) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;
    &lt;span class=&#34;comment&#34;&gt;// 处理左子树&lt;/span&gt;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d += tr[u].d;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s += (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].r - tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * tr[u].d;
    &lt;span class=&#34;comment&#34;&gt;// 处理右子树&lt;/span&gt;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d += tr[u].d;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s += (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].r - tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * tr[u].d;
    &lt;span class=&#34;comment&#34;&gt;// 清除懒标记&lt;/span&gt;
    tr[u].d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这部分代码其实很简单。&lt;/p&gt;
&lt;p&gt;将左、右子树的懒标记加上父节点的懒标记，区间和加上 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(r - l + 1)\times d&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.77777em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;×&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; （&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;r, l&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 分别表示儿子区间的左、右端点，&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;d&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;表示父节点的懒标记），最后清空父节点的懒标记即可。&lt;/p&gt;
&lt;h3 id=&#34;区间修改（modify）&#34;&gt;区间修改（modify）&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 区间修改&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l 左端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r 右端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param d 增加的值&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; d)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tr[u].l &amp;gt;= l &amp;amp;&amp;amp; tr[u].r &amp;lt;= r) &amp;#123;  &lt;span class=&#34;comment&#34;&gt;// 被包含直接修改&lt;/span&gt;
        tr[u].d += d;
        tr[u].s += (tr[u].r - tr[u].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * d;
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = tr[u].l + tr[u].r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    pushdown(u);                               &lt;span class=&#34;comment&#34;&gt;// 下放懒标记&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l &amp;lt;= mid) modify(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r, d);     &lt;span class=&#34;comment&#34;&gt;// 和左侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (r &amp;gt; mid) modify(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r, d);  &lt;span class=&#34;comment&#34;&gt;// 和右侧有交集&lt;/span&gt;
    pushup(u);                                 &lt;span class=&#34;comment&#34;&gt;// 上传新信息&lt;/span&gt;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;区间修改和区间查询的实现相似。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果当前区间被包含，直接添加懒标记并修改区间和。&lt;/li&gt;
&lt;li&gt;如果和左儿子区间有交集，则继续向左儿子区间递归修改。&lt;/li&gt;
&lt;li&gt;如果和右儿子区间有交集，则继续向右儿子区间递归修改。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要注意的是在递归修改左右儿子区间之前要先下放懒标记（pushdown），修改完成以后要上传新信息（pushup），否则会出问题。&lt;/p&gt;
&lt;h2 id=&#34;区间加、乘&#34;&gt;区间加、乘&lt;/h2&gt;
&lt;p&gt;本部分以 &lt;a href=&#34;https://www.luogu.com.cn/problem/P3373&#34;&gt;洛谷 P3373 【模板】线段树 2&lt;/a&gt; 为例子来简述一下线段树区间加、乘的实现。&lt;/p&gt;
&lt;p&gt;在编写之前，结构体中需要先添加一个乘法的懒标记 &lt;code&gt;x&lt;/code&gt; ，并将其赋初值为 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ，修改之后的结构体如下所示。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;node&lt;/span&gt; &amp;#123;&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, r;
    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; s, d, x;

    node() &amp;#123;
        l = r = s = d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
        x = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    &amp;#125;
    node(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; _l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; _r) &amp;#123;
        l = _l, r = _r;
        s = d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
        x = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    &amp;#125;
&amp;#125; tr[&lt;span class=&#34;number&#34;&gt;100005&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;下放懒标记（pushdown）-2&#34;&gt;下放懒标记（pushdown）&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 下放懒标记&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @attention 先乘后加&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;pushdown&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;comment&#34;&gt;// 左子树&lt;/span&gt;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s = ((tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s * tr[u].x) + (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].r - tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * tr[u].d) % p;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].x = tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].x * tr[u].x % p;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d = (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d * tr[u].x + tr[u].d) % p;
    &lt;span class=&#34;comment&#34;&gt;// 右子树&lt;/span&gt;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s = ((tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s * tr[u].x) + (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].r - tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * tr[u].d) % p;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].x = tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].x * tr[u].x % p;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d = (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d * tr[u].x + tr[u].d) % p;
    &lt;span class=&#34;comment&#34;&gt;// 清除懒标记&lt;/span&gt;
    tr[u].d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
    tr[u].x = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;此处遵循&lt;strong&gt;先乘后加&lt;/strong&gt;的原则，先修改区间和，再修改乘法懒标记，最后修改加法懒标记，不要忘记 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mo lspace=&#34;0.22em&#34; rspace=&#34;0.22em&#34;&gt;&lt;mrow&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;m&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;o&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;/mo&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\bmod\ p&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.05555555555555555em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathrm&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathrm&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathrm&#34;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.05555555555555555em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意：此处清除懒标记的时候，乘法懒标记应修改为 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;区间修改（modify）-2&#34;&gt;区间修改（modify）&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 区间修改&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @details 修改区间 [l, r] 中的每一个数&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l 左端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r 右端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param x 乘上的数&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param d 增加的值&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; x, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; d)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;comment&#34;&gt;// 被包含直接修改&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tr[u].l &amp;gt;= l &amp;amp;&amp;amp; tr[u].r &amp;lt;= r) &amp;#123;
        tr[u].s = ((tr[u].s * x) + (tr[u].r - tr[u].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * d) % p;
        tr[u].x = tr[u].x * x % p;
        tr[u].d = (tr[u].d * x + d) % p;
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = tr[u].l + tr[u].r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    pushdown(u);                                  &lt;span class=&#34;comment&#34;&gt;// 下放懒标记&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l &amp;lt;= mid) modify(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r, x, d);     &lt;span class=&#34;comment&#34;&gt;// 和左侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (r &amp;gt; mid) modify(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r, x, d);  &lt;span class=&#34;comment&#34;&gt;// 和右侧有交集&lt;/span&gt;
    pushup(u);                                    &lt;span class=&#34;comment&#34;&gt;// 上传新信息&lt;/span&gt;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;大体上和加法的修改函数一样，而在修改时与下放懒标记做法相同，遵循&lt;strong&gt;先乘后加&lt;/strong&gt;的原则。&lt;/p&gt;
&lt;p&gt;调用的时候若只需要使用乘法部分，加数设置为 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;0&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 即可。若只需要使用加法部分，乘数设置为 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 即可。&lt;/p&gt;
&lt;h2 id=&#34;全部代码&#34;&gt;全部代码&lt;/h2&gt;
&lt;p&gt;到这里基本操作就说完了，下面是全部的 AC 代码。&lt;/p&gt;
&lt;h3 id=&#34;区间加-2&#34;&gt;区间加&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;;

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 线段树节点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;node&lt;/span&gt; &amp;#123;&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, r;
    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; s, d;

    node() &amp;#123;
        l = r = s = d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
    &amp;#125;
    node(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; _l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; _r) &amp;#123;
        l = _l;
        r = _r;
        s = d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
    &amp;#125;
&amp;#125; tr[&lt;span class=&#34;number&#34;&gt;100005&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];
&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n, m, op, x, y, k, a[&lt;span class=&#34;number&#34;&gt;100005&lt;/span&gt;];

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 上传区间和&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;pushup&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    tr[u].s = tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s + tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s;
&amp;#125;

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 下放懒标记&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;pushdown&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!tr[u].d) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;
    &lt;span class=&#34;comment&#34;&gt;// 处理左子树&lt;/span&gt;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d += tr[u].d;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s += (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].r - tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * tr[u].d;
    &lt;span class=&#34;comment&#34;&gt;// 处理右子树&lt;/span&gt;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d += tr[u].d;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s += (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].r - tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * tr[u].d;
    &lt;span class=&#34;comment&#34;&gt;// 清除懒标记&lt;/span&gt;
    tr[u].d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
&amp;#125;

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 建立线段树&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 根节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l 左端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r 右端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    tr[u] = node(l, r);
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l == r) &amp;#123;
        tr[u].s = a[l];
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = l + r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    build(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, mid);
    build(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, mid + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, r);
    pushup(u);
&amp;#125;

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 区间修改&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l 左端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r 右端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param d 增加的值&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; d)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tr[u].l &amp;gt;= l &amp;amp;&amp;amp; tr[u].r &amp;lt;= r) &amp;#123;  &lt;span class=&#34;comment&#34;&gt;// 被包含直接修改&lt;/span&gt;
        tr[u].d += d;
        tr[u].s += (tr[u].r - tr[u].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * d;
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = tr[u].l + tr[u].r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    pushdown(u);                               &lt;span class=&#34;comment&#34;&gt;// 下放懒标记&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l &amp;lt;= mid) modify(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r, d);     &lt;span class=&#34;comment&#34;&gt;// 和左侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (r &amp;gt; mid) modify(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r, d);  &lt;span class=&#34;comment&#34;&gt;// 和右侧有交集&lt;/span&gt;
    pushup(u);                                 &lt;span class=&#34;comment&#34;&gt;// 上传新信息&lt;/span&gt;
&amp;#125;

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 区间查询&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l 左端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r 右端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tr[u].l &amp;gt;= l &amp;amp;&amp;amp; tr[u].r &amp;lt;= r) &amp;#123;  &lt;span class=&#34;comment&#34;&gt;// 被包含直接返回&lt;/span&gt;
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; tr[u].s;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = tr[u].l + tr[u].r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; s = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
    pushdown(u);                                &lt;span class=&#34;comment&#34;&gt;// 下放懒标记&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l &amp;lt;= mid) s += query(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r);     &lt;span class=&#34;comment&#34;&gt;// 和左侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (r &amp;gt; mid) s += query(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r);  &lt;span class=&#34;comment&#34;&gt;// 和右侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;
&amp;#125;

&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;built_in&#34;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m;
    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; i++) &amp;#123;
        &lt;span class=&#34;built_in&#34;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; a[i];
    &amp;#125;
    build(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, n);
    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; m; i++) &amp;#123;
        &lt;span class=&#34;built_in&#34;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; op &amp;gt;&amp;gt; x &amp;gt;&amp;gt; y;
        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;
            &lt;span class=&#34;built_in&#34;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; k;
            modify(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, x, y, k);
        &amp;#125;
        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;#123;
            &lt;span class=&#34;built_in&#34;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; query(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, x, y) &amp;lt;&amp;lt; &lt;span class=&#34;built_in&#34;&gt;endl&lt;/span&gt;;
        &amp;#125;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;区间加、乘-2&#34;&gt;区间加、乘&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;highlight cpp&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;;

&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;node&lt;/span&gt; &amp;#123;&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, r;
    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; s, d, x;

    node() &amp;#123;
        l = r = s = d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
        x = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    &amp;#125;
    node(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; _l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; _r) &amp;#123;
        l = _l, r = _r;
        s = d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
        x = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    &amp;#125;
&amp;#125; tr[&lt;span class=&#34;number&#34;&gt;100005&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];
&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n, m, p, op, x, y;
&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; k, a[&lt;span class=&#34;number&#34;&gt;100005&lt;/span&gt;];

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 上传信息&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;pushup&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    tr[u].s = (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s + tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s) % p;
&amp;#125;

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 下放懒标记&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @attention 先乘后加&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;pushdown&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;comment&#34;&gt;// 左子树&lt;/span&gt;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s = ((tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s * tr[u].x) + (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].r - tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * tr[u].d) % p;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].x = tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].x * tr[u].x % p;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d = (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d * tr[u].x + tr[u].d) % p;
    &lt;span class=&#34;comment&#34;&gt;// 右子树&lt;/span&gt;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s = ((tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].s * tr[u].x) + (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].r - tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * tr[u].d) % p;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].x = tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].x * tr[u].x % p;
    tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d = (tr[u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].d * tr[u].x + tr[u].d) % p;
    &lt;span class=&#34;comment&#34;&gt;// 清除懒标记&lt;/span&gt;
    tr[u].d = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
    tr[u].x = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
&amp;#125;

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 建立线段树&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 根节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l 左端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r 右端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    tr[u] = node(l, r);
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l == r) &amp;#123;
        tr[u].s = a[l] % p;
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = l + r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    build(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, mid);
    build(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, mid + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, r);
    pushup(u);
&amp;#125;

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 区间修改&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @details 将区间 [l, r] 中的每一个数加上 d&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u 父节点下标&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l 左端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r 右端点&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param x 乘上的数&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param d 增加的值&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; x, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; d)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;comment&#34;&gt;// 被包含直接修改&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tr[u].l &amp;gt;= l &amp;amp;&amp;amp; tr[u].r &amp;lt;= r) &amp;#123;
        tr[u].s = ((tr[u].s * x) + (tr[u].r - tr[u].l + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) * d) % p;
        tr[u].x = tr[u].x * x % p;
        tr[u].d = (tr[u].d * x + d) % p;
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = tr[u].l + tr[u].r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    pushdown(u);                                  &lt;span class=&#34;comment&#34;&gt;// 下放懒标记&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l &amp;lt;= mid) modify(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r, x, d);     &lt;span class=&#34;comment&#34;&gt;// 和左侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (r &amp;gt; mid) modify(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r, x, d);  &lt;span class=&#34;comment&#34;&gt;// 和右侧有交集&lt;/span&gt;
    pushup(u);                                    &lt;span class=&#34;comment&#34;&gt;// 上传新信息&lt;/span&gt;
&amp;#125;

&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * 区间查询&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param u &lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param l &lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @param r &lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; * @return int &lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; u, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r)&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tr[u].l &amp;gt;= l &amp;amp;&amp;amp; tr[u].r &amp;lt;= r) &amp;#123;  &lt;span class=&#34;comment&#34;&gt;// 被包含直接返回&lt;/span&gt;
        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; tr[u].s;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mid = tr[u].l + tr[u].r &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;
    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; s = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
    pushdown(u);                                         &lt;span class=&#34;comment&#34;&gt;// 下放懒标记&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (l &amp;lt;= mid) s = query(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r);               &lt;span class=&#34;comment&#34;&gt;// 和左侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (r &amp;gt; mid) s = (s + query(u &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; | &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, l, r)) % p;  &lt;span class=&#34;comment&#34;&gt;// 和右侧有交集&lt;/span&gt;
    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;
&amp;#125;

&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;
    &lt;span class=&#34;built_in&#34;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m &amp;gt;&amp;gt; p;
    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt;= n; i++) &amp;#123;
        &lt;span class=&#34;built_in&#34;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; a[i];
    &amp;#125;
    build(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, n);
    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (m--) &amp;#123;
        &lt;span class=&#34;built_in&#34;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; op &amp;gt;&amp;gt; x &amp;gt;&amp;gt; y;
        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;
            &lt;span class=&#34;built_in&#34;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; k;
            modify(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, x, y, k, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);
        &amp;#125;
        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;#123;
            &lt;span class=&#34;built_in&#34;&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; k;
            modify(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, x, y, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, k);
        &amp;#125;
        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (op == &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) &amp;#123;
            &lt;span class=&#34;built_in&#34;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; query(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, x, y) % p &amp;lt;&amp;lt; &lt;span class=&#34;built_in&#34;&gt;endl&lt;/span&gt;;
        &amp;#125;
    &amp;#125;
    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;
&amp;#125;&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
    </channel>
</rss>